name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests
      run: |
        cd backend
        python -m pytest --verbose

    - name: Lint backend code (flake8)
      run: |
        cd backend
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  frontend-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          frontend/mocker_web/.dart_tool
        key: ${{ runner.os }}-flutter-${{ hashFiles('frontend/mocker_web/pubspec.yaml') }}
        restore-keys: ${{ runner.os }}-flutter-

    - name: Install frontend dependencies
      run: |
        cd frontend/mocker_web
        flutter pub get

    - name: Run frontend tests
      run: |
        cd frontend/mocker_web
        flutter test

    - name: Build Flutter web app
      run: |
        cd frontend/mocker_web
        flutter build web --release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: frontend/mocker_web/build/web/

  deploy:
    needs: [backend-test, frontend-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: ./web-build

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./web-build

    - name: Deploy
      uses: actions/deploy-pages@v2
